void send_socket_command(),set_attenuation(double);
char *pptstring[20];
char commandstring[200];
float temperature;
float tempf;
double setting;
void start_powermeter(),stop_powermeter();

GETCURDATA



(void) sprintf(commandstring,"AMPON");
GETSTRING("Enter Socket Command",commandstring);
send_socket_command(commandstring);


//setting = 10;
////GETFLOAT("Enter Attenuation Setting",setting);
//set_attenuation(setting);

QUIT

void set_attenuation(double attenuation_setting)/*{{{*/
{
	char commandstring[200];
	(void) sprintf(commandstring,"SETATTEN %0.2f",attenuation_setting);
	send_socket_command(commandstring);
}/*}}}*/
/*{{{*/// Send Socket Command function
#define SERV_HOST_ADDR  2130706433       /* host addr=127.0.0.1 for server */
void send_socket_command(char *command_string) {
    char text[128];
    int err;
    int sock;
    int port = 7000;
    time_t tloc,EndTime;

    static char data[1000];
    static char crlf[2]= { "\r\n" };
    struct sockaddr_in server;
    /* struct hostent *hp, *gethostbyname(); */

#ifdef HAS_WINDOWS_FEATURES
    WORD wVersionRequested;
    WSADATA wsaData;
    wVersionRequested=MAKEWORD(2,0);
    err=WSAStartup(wVersionRequested,&wsaData);
#endif

    (void) strcpy(data,command_string);
    (void) strcat(data,"\n");
    sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if (sock < 0 ) {
        Proc_err(DEF_ERR_OPT,"can't open socket\n");
        STOP
    }else{
        server.sin_addr.s_addr = htonl(SERV_HOST_ADDR);   /* 127.0.0.1 */
        server.sin_family = AF_INET;
        server.sin_port = htons(port);
        if (connect(sock,&server,sizeof(server))<0) {
            Proc_err(DEF_ERR_OPT,"Can't connect to server!\n%s\n",strerror(errno));
        }
        if (send(sock,data,strlen(data),0)<0) {
            Proc_err(DEF_ERR_OPT,"Can't send to server!\n%s\n",strerror(errno));
        }
#ifdef HAS_WINDOWS_FEATURES
        closesocket(sock);
#else
        close(sock);
#endif
    }
    return;
}/*}}}*/
